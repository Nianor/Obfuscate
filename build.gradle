buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven-publish'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
// apply plugin: 'eclipse'

version = '0.6.4-1.18.2'
group = 'com.mrcrayfish' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
java {
    archivesBaseName = 'obfuscate'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

mixin {
    add sourceSets.main, "obfuscate.refmap.json"
}

minecraft {
    mappings channel: 'official', version: '1.18.2'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=obfuscate.mixins.json"
            mods {
                obfuscate {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=obfuscate.mixins.json"
            mods {
                obfuscate {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'obfuscate', '--all', '--output', file('src/generated/resources/')
            mods {
                obfuscate {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.73'
    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "Obfuscate",
            "Specification-Vendor": "MrCrayfish",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"MrCrayfish",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs" : "obfuscate.mixins.json"
        ])
    }
}

//Loads the keystore from remote location
Properties keyStoreProperties = new Properties()
File file = new File("C:\\dev\\keystore.properties")
if(file.exists()) {
    InputStream ins = new FileInputStream(file)
    keyStoreProperties.load(ins)
    ins.close()
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
